@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Declencheur {
  + Declencheur(int, int):
  - active: boolean
  - x: int
  - y: int
  + etrePresent(int, int): boolean
  + setActive(): void
   x: int
   active: boolean
   y: int
}
interface Entite << interface >> {
  + etrePresent(int, int): boolean
   x: int
   y: int
}
class LabyDessin {
  + LabyDessin():
  + dessinerJeu(Jeu, Canvas): void
}
class LabyJeu {
  + LabyJeu():
  + LabyJeu(String):
  - laby: Labyrinthe
  + etreFini(): boolean
  + init(): void
  + update(double, Clavier): void
   laby: Labyrinthe
}
class Labyrinthe {
  + Labyrinthe(String):
  + getSuivant(int, int, String): int[]
  + getMur(int, int): boolean
  + deplacerPerso(String): void
  + etreFini(): boolean
   length: int
   lengthY: int
}
class Main {
  + Main():
  + main(String[]): void
}
class MainLaby {
  + MainLaby():
  + main(String[]): void
}
class Menu {
  + Menu():
  + start(Stage): void
  + listeFichiers(String): File[]?
}
class Monstre {
  + Monstre(int, int):
  ~ x: int
  ~ y: int
  + etrePresent(int, int): boolean
   x: int
   y: int
}
class Perso {
  + Perso(int, int):
  ~ x: int
  ~ y: int
  + etrePresent(int, int): boolean
   x: int
   y: int
}
class Porte {
  + Porte(int, int):
  - declencheur: Declencheur
  + etrePresent(int, int): boolean
   declencheur: Declencheur
}

LabyJeu     "1" *-[#595959,plain]-> "laby\n1" Labyrinthe
Labyrinthe  "1" *-[#595959,plain]-> "Trigger\n*" Declencheur
Labyrinthe  "1" *-[#595959,plain]-> "monstres\n*" Monstre
Labyrinthe  "1" *-[#595959,plain]-> "pj\n1" Perso
Labyrinthe  "1" *-[#595959,plain]-> "portes\n*" Porte
Perso        -[#008200,dashed]-^  Entite
Porte       "1" *-[#595959,plain]-> "declencheur\n1" Declencheur
@enduml
